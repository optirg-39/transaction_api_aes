# Generated by Django 3.1.1 on 2021-06-01 09:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('transaction', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('unique_id', models.AutoField(primary_key=True, serialize=False)),
                ('trans_number', models.CharField(default=None, editable=False, max_length=20, unique=True)),
                ('trans_status', models.CharField(choices=[('PENDING', 'PENDING'), ('COMPLETED', 'COMPLETED'), ('CLOSE', 'CLOSE')], default='1', max_length=20)),
                ('remarks', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'db_table': 'Transaction',
            },
        ),
        migrations.AlterModelTable(
            name='articlemaster',
            table='ArticleMaster',
        ),
        migrations.AlterModelTable(
            name='branchmaster',
            table='BranchMaster',
        ),
        migrations.AlterModelTable(
            name='colormaster',
            table='ColorMaster',
        ),
        migrations.AlterModelTable(
            name='companyledgermaster',
            table='CompanyLedgerMaster',
        ),
        migrations.AlterModelTable(
            name='departmentmaster',
            table='DepartmentMaster',
        ),
        migrations.CreateModel(
            name='TransactionLineItemDetails',
            fields=[
                ('unique_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now=True)),
                ('quantity', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('rate_per_unit', models.IntegerField()),
                ('unit', models.CharField(choices=[('KG', 'KG'), ('METER', 'METER')], default='1', max_length=35)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transaction.articlemaster')),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transaction.colormaster')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='transaction.transaction')),
            ],
            options={
                'db_table': 'TransactionLineItemDetails',
            },
        ),
        migrations.AddField(
            model_name='transaction',
            name='branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transaction.branchmaster'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transaction.companyledgermaster'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transaction.departmentmaster'),
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('unique_id', models.AutoField(primary_key=True, serialize=False)),
                ('gross_quan', models.DecimalField(decimal_places=2, max_digits=5)),
                ('net_quan', models.DecimalField(decimal_places=2, max_digits=5)),
                ('unit', models.CharField(choices=[('KG', 'KG'), ('METER', 'METER')], default='1', max_length=35)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transaction.articlemaster')),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transaction.colormaster')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transaction.companyledgermaster')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='transaction.transactionlineitemdetails')),
            ],
            options={
                'db_table': 'InventoryItem',
            },
        ),
    ]
